name: CI Pipeline

on:
  push:
    branches:
      - main
      - 'phase-2-voice-ai'
  pull_request:
    branches:
      - main
      - 'phase-2-voice-ai'

jobs:
  setup:
    name: Setup Node Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: yarn install
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            **/.pnpm-store
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}

  lint_and_typecheck:
    name: Lint and TypeScript Check
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Run ESLint
        run: yarn lint
      - name: Run TypeScript Compiler
        run: yarn tsc --noEmit

  test_phase1:
    name: Run Phase 1 Tests
    if: github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'
    needs: lint_and_typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: yarn install
      - name: Run Unit Tests (Core)
        run: yarn test:unit
      - name: Run Integration Tests (Core)
        run: yarn test:integration
      - name: Run E2E Tests (Core)
        run: yarn test:e2e:core
      - name: Run Performance Tests (Core)
        run: yarn test:perf:core

  test_phase2:
    name: Run Phase 2 (Voice AI) Tests
    if: github.ref == 'refs/heads/phase-2-voice-ai' || github.event.pull_request.base.ref == 'phase-2-voice-ai'
    needs: lint_and_typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: yarn install
      - name: Run Unit Tests (Core)
        run: yarn test:unit
      - name: Run Unit Tests (Voice AI)
        run: yarn test:unit:voice
      - name: Run Integration Tests (Core)
        run: yarn test:integration
      - name: Run Integration Tests (Voice AI)
        run: yarn test:integration:voice
      - name: Run E2E Tests (Core)
        run: yarn test:e2e:core
      - name: Run E2E Tests (Voice AI)
        run: yarn test:e2e:voice
      - name: Run Performance Tests (Core)
        run: yarn test:perf:core
      - name: Run Performance Tests (Voice AI)
        run: yarn test:perf:voice

  build_and_deploy:
    name: Build and Deploy to Vercel
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/phase-2-voice-ai'
    needs:
      - test_phase1
      - test_phase2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: yarn install
      - name: Build Next.js App
        run: yarn build
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: .
          scope: 'my-vercel-scope'

  notify:
    name: Notify Slack on Failure
    needs: [build_and_deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: |
            :x: *CI Failure*: `${{ github.workflow }}` in `${{ github.ref }}`
            Commit: `${{ github.sha }}`
            See details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
